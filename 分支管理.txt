


 
#####################  	分支操作		#####################



git branch 分支名			----新建本地分支

git push origin 分支名			----推送本地分支到远程




git push origin --delete 分支名		----删除远程分支	


切换到master或者其他分支：
git branch -d 分支名			----是要删除本地已经合并了的分支


git branch -D 分支名			----是要删除本地没有合并的分支



在git中重命名远程分支，其实就是先删除远程分支，然后重命名本地分支，再重新提交一个远程分支。

$ git push origin --delete 分支名



分支合并：

     首先切换的master分支：git checkout master。

     然后执行合并操作：git merge develop。

     如果有冲突，会提示你，调用git status查看冲突文件。

     解决冲突，然后调用git add或git rm将解决后的文件暂存。

     所有冲突解决后，git commit 提交更改

分支衍合和分支合并的差别在于，分支衍合不会保留合并的日志，不留痕迹，而 分支合并则会保留合并的日志。

     要将开发中的分支（develop），衍合到稳定分支（master）。
     首先切换的master分支：git checkout master。

     然后执行衍和操作：git rebase develop。

     如果有冲突，会提示你，调用git status查看冲突文件。

     解决冲突，然后调用git add或git rm将解决后的文件暂存。

     所有冲突解决后，git rebase --continue 提交更改。